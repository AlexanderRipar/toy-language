Result :: proc(Success : &type, Failure : &type) -> type
{
	assert(implements(Failure, ErrorCode))

	return struct
	{
		success : Success

		failure : Failure

		MaybeError.is_ok :: impl(self : &Self) -> bool
			return is_ok(failure)
	}
}

MaybeError :: trait(T : type)
{
	is_ok :: proc(t : &T) -> bool
}

ErrorCode :: trait(T : type)
{
	is_ok :: proc(t : &T) -> bool
}

WinRst :: proc(Success : &type) -> type
{
	return Result(Success, HResult)
}

HResult :: enum
{

}

EXIT_SUCCESS :: as(0, i32)

EXIT_FAILURE :: as(1, i32)
